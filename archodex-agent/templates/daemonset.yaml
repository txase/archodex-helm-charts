apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "archodex-agent.fullname" . }}
  labels:
    {{- include "archodex-agent.labels" . | nindent 4 }}
spec:
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 100%
  selector:
    matchLabels:
      {{- include "archodex-agent.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "archodex-agent.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "archodex-agent.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            privileged: true
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
            - name: rules
              mountPath: /config/rules
              readOnly: true
          env:
          {{- with .Values.environment }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
            - name: KUBERNETES_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
      volumes:
        {{- with .Values.volumes }}
        {{- toYaml .Values.volumes | nindent 8 }}
        {{- end }}
        - name: rules
          projected:
            sources:
              {{- $fullname := include "archodex-agent.fullname" . -}}
              {{- range $name, $rules := .Values.rules }}
              - configMap:
                  name: {{ printf "%s-%s" $fullname $name }}
              {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      hostPID: true
      terminationGracePeriodSeconds: 30